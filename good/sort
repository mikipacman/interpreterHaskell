int n = 10;
int[n] arr; 

int init_arr(int n) {
	for (int i = 0; i < n; i = i + 1) {
		arr[i] = n - i;
	}

	return 0; 
}

// Bubble sort
int sort(int n) {
	int swap;

	for (int i = 0; i < n - 1; i = i + 1) {
    	for (int j = 0; j < n - i - 1; j = j + 1) {
			if (arr[j] > arr[j + 1]) {
				swap = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = swap;
			}
    	}
  	}

  	return 0;
}

int print_arr() {
	for (int i = 0; i < n; i = i + 1) {
		printInt(arr[i]);
	}

	return 0;
}

int main() {

	int arr_reads, arr_writes, comparisons;
	
	init_arr(n);
	printStr("BEFORE");
	print_arr();

	sort(n);
	printStr("AFTER");
	print_arr();


	count arr read_cost 1 with arr_reads;
	count arr write_cost 1 with arr_writes; 
	count < cost 1 with comparisons;

	// Powinno wypisać liczbę dostępów do tablicy arr
	printInt(arr_reads);

	// Powinno wypisać liczbę zapisów do tablicy arr
	printInt(arr_writes);

	// Powinno wypisać liczbę porównań
	printInt(comparisons);

	return 0;
}